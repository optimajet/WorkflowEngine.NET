var WorkflowDesignerConstants = {
  ActivityColor: "#ECF0F1",
  ActivityTextColor: "#2D3436",
  ActivityInitialColor: "#27AE60",
  ActivityInitialTextColor: "#FFFFFF",
  ActivityFinalColor: "#2980B9",
  ActivityFinalTextColor: "#FFFFFF",
  ActivityShape: "#CECECE",
  SelectColor: "#F39C12",
  SelectTextColor: "#FFFFFF",
  SelectSubProcessColor: "#e3b015",
  SelectSubProcessTextColor: "#FFFFFF",
  ButtonActive: "#D4D8D9",
  DateTimeFormat: "YYYY-MM-DD HH:MM:SS",
  BarColor: "#EDF1F2",
  BarSeparatorColor: "#D9DEE0",
  IsRequiredColor: "#F56C6C",
  ParameterFromProcessColor: "#1f8dd6",
  DeleteConfirm: "Seçilen öğeleri silmek istediğinizden emin misiniz?",
  DeleteConfirmCurrent: "Bu öğeyi silmek istediğinizden emin misiniz?",
  FieldIsRequired: "Alan gereklidir!",
  FieldIsNotCorrected: "Field is not corrected!",
  FieldMustBeUnique: "Alan benzersiz olmalı!",
  FieldMustContainAt: "Field must contain @",
  ButtonTextDelete: "Silmek",
  ButtonTextCreate: "Yaratmak",
  ButtonTextSave: "Kayıt etmek",
  ButtonTextYes: "Evet",
  ButtonTextNo: "Yok hayır",
  ButtonTextOk: "Ok",
  ButtonTextCancel: "İptal etmek",
  ButtonTextClose: "Kapat",
  ButtonTextUndo: "Geri alma",
  ButtonTextRedo: "Yeniden yapmak",
  SaveConfirm: "Değişiklikleri Kaydet?",
  CloseWithoutSaving: "Kaydetmeden kapatılsın mı?",
  TransitionAuto: "Auto",
  DialogConfirmText: "Soru",
  AlertTitle: "Warning",
  None: "Yok",
  Warning: "Uyarı",
  SwitchToExpertMode: "Switch To Expert Mode",
  SwitchToDefaultMode: "Switch To Default Mode",
  InfoBlockLabel: {
    Activity: "Etkinlikler:",
    Transition: "Geçişler:",
    Command: "Komutlar:"
  },
  ActivityNamePrefix: "Aktivite_",
  ActivityFormLabel: {
    Title: "Aktivite",
    TitleForInline: "Activity Inline",
    Name: "Isim",
    State: "Belirtmek, bildirmek",
    IsInitial: "Ilk",
    IsFinal: "Final",
    IsForSetState: "Ayarlanmış durum için",
    IsAutoSchemeUpdate: "Otomatik şema güncellemesi",
    DisablePersist: "Disable persist",
    DisablePersists: {
      DisablePersistTransitionHistory: "Disable persist transition history",
      DisablePersistState: "Disable persist process state",
      DisablePersistParameters: "Disable persist process parameters"
    },
    Implementation: "Uygulama",
    PreExecutionImplementation: "PreExecution Uygulaması",
    ImpOrder: "Sipariş",
    ExecutionTimeoutLabel: "Execution timeout",
    ExecutionTimeoutWarning: "Execution timeout works only with async actions. Check the cancellation token for proper timeout handling.",
    TimeoutsLabel: "Timeouts",
    TypeLabel: "Type",
    ActivityLabel: "Activity",
    StateLabel: "State",
    RetryCountLabel: "Retry count",
    SetActivityLabel: "SetActivity",
    SetStateLabel: "SetState",
    RetryLabel: "Retry",
    IgnoreLabel: "Ignore",
    AllExceptions: "*",
    IdleTimeoutLabel: "Idle timeout",
    ExceptionsHandling: "Exceptions handling",
    Exceptions: "Exceptions",
    ImpAction: "Aksiyon",
    ImpActionParameter: "Eylem parametresi",
    Annotations: "Annotations",
    AnnotationName: "Name",
    AnnotationValue: "Value",
    Scheme: "Inline scheme",
    UserComment: "Yorum Yap",
    AlwaysConditionShouldBeSingle: "Her zaman durum tek olmalı",
    OtherwiseConditionShouldBeSingle: "Aksi halde durum tek olmalı"
  },
  Decision: {
    Title: "Decision",
    TitleForInline: "Decision Inline",
    Name: "Name",
    State: "State",
    IsInitial: "Initial",
    IsFinal: "Final",
    IsForSetState: "For set state",
    IsAutoSchemeUpdate: "Auto scheme update",
    Implementation: "Implementation",
    PreExecutionImplementation: "PreExecution Implementation",
    Annotations: "Annotations",
    Scheme: "Inline scheme",
    To: "To activity",
    WhenTrue: "When True",
    WhenFalse: "When False",
    Transition: "Transitions to activities",
    Condition: "Condition",
    ConditionType: "Type",
    ConditionAction: "Action",
    ResultOnPreExecution: "PreExec. Result",
    ConditionActionParameter: "Action parameter",
    ConditionInversion: "Invert result",
    ActionLabel: "Action",
    ExpressionLabel: "Expression",
    UserComment: "Comment"
  },
  DecisionTable: {
    Title: "Decision table",
    TitleForInline: "Decision table Inline",
    Name: "Name",
    State: "State",
    IsInitial: "Initial",
    IsFinal: "Final",
    IsForSetState: "For set state",
    IsAutoSchemeUpdate: "Auto scheme update",
    Implementation: "Implementation",
    PreExecutionImplementation: "PreExecution Implementation",
    Annotations: "Annotations",
    Scheme: "Inline scheme",
    To: "To activity",
    Transition: "Transitions to activities",
    ConditionType: "Type",
    Condition: "Condition",
    Parameters: "Parameters",
    ConditionAction: "Action",
    ResultOnPreExecution: "PreExec. Result",
    ConditionActionParameter: "Action parameter",
    ConditionInversion: "Invert result",
    ActionLabel: "Action",
    ExpressionLabel: "Expression",
    UserComment: "Comment"
  },
  TransitionFormLabel: {
    Title: "Geçiş",
    Name: "Isim",
    From: "Faaliyetten",
    To: "Faaliyete",
    Classifier: "Sınıflandırıcıyı",
    Restrictions: "Kısıtlamalar",
    RestrictionsType: "Tip",
    RestrictionsActor: "Aktör",
    Condition: "Şart",
    ConditionType: "Tip",
    ConditionAction: "Aksiyon",
    ResultOnPreExecution: "PreExecution'da Sonuç",
    Trigger: "Tetik",
    TriggerType: "Tip",
    TriggerAuto: "Auto",
    TriggerCommand: "Komuta",
    TriggerTimer: "Kronometre",
    ConditionActionParameter: "Eylem parametresi",
    ConditionExpression: "Expression",
    ConditionInversion: "Eylem sonucunu tersine çevir",
    ConditionsConcatenationType: "Koşulları birleştirme türü",
    AllowConcatenationType: "Concat olarak izin ver",
    RestrictConcatenationType: "Concat kısıtlaması",
    IsFork: "Çatal mı",
    MergeViaSetState: "Ayarlanmış durum aracılığıyla alt süreci birleştir",
    DisableParentStateControl: "Ana işlem denetimini devre dışı bırak",
    ShowConcatParameters: "Birleştirme göster",
    HideConcatParameters: "Birleştirmeyi gizle",
    Annotations: "Annotations",
    AnnotationName: "Name",
    AnnotationValue: "Value",
    InlinedFinalActivityName: "Inlined Final Activity Name",
    Allow: "Allow",
    Restrict: "Restrict",
    ConditionsListShouldNotBeEmpty: "Koşullar listesi boş bırakılmamalıdır",
    AlwaysConditionShouldBeSingle: "Always condition should be single",
    OtherwiseConditionShouldBeSingle: "Otherwise condition should be single",
    ConditionalLabel: "Conditional",
    AlwaysLabel: "Always",
    ActionLabel: "Action",
    ExpressionLabel: "Expression",
    OtherwiseLabel: "Otherwise",
    UserComment: "Yorum Yap",
    Subprocess: "Subprocess",
    SubprocessNone: "None",
    SubprocessStart: "Start",
    SubprocessFinalize: "Finalize",
    SubprocessAuto: "Auto",
    SubprocessStartSettings: "Subprocess start settings",
    SubprocessFinalizeSettings: "Subprocess finalize settings",
    SubprocessName: "Subprocess name",
    SubprocessId: "Subprocess id",
    SubprocessIdPlaceholder: "Autogenerated GUID",
    SubprocessNamePlaceholder: "Same as transition name",
    SubprocessStartupType: "Subprocess startup type",
    SubprocessStartupTypeSameThread: "Same thread",
    SubprocessStartupTypeAnotherThread: "Another thread",
    SubprocessStartupTypeTimerQueue: "Timer queue",
    SubprocessStartupParameterCopyStrategy: "Parameters copy strategy",
    SubprocessStartupParameterCopyStrategyCopyAll: "Copy all",
    SubprocessStartupParameterCopyStrategyIgnoreAll: "Ignore all",
    SubprocessStartupParameterCopyStrategyCopySpecified: "Copy specified",
    SubprocessStartupParameterCopyStrategyIgnoreSpecified: "Ignore specified",
    SubprocessSpecifiedParameters: "Specified parameters",
    SubprocessFinalizeParameterMergeStrategy: "Parameters merge strategy",
    SubprocessFinalizeParameterMergeStrategyOverwriteAllNulls: "Overwrite all nulls",
    SubprocessFinalizeParameterMergeStrategyOverwriteAll: "Overwrite all",
    SubprocessFinalizeParameterMergeStrategyOverwriteSpecified: "Overwrite specified",
    SubprocessFinalizeParameterMergeStrategyDontOverwriteSpecified: "Don't overwrite specified"
  },
  LocalizationFormLabel: {
    Title: "Yerelleştirme",
    ObjectName: "Nesne adı",
    Type: "Tip",
    IsDefault: "IsDefault",
    Culture: "Kültür",
    Value: "Değer",
    Types: ["Command", "State", "Parameter"]
  },
  TimerFormLabel: {
    Title: "Zamanlayıcılar",
    Name: "Isim",
    Type: "Tip",
    Value: "Değer",
    Types: ["Command", "State", "Parameter"],
    OverrideHint: "Varsa zamanlayıcıyı geçersiz kılar",
    Override: "Geçersiz kılar"
  },
  AssignmentFormLabel: {
    Title: "Assignments",
    Code: "Code",
    Name: "Name",
    Executor: "Executor",
    ExecutorId: "Executor Id",
    Status: "Status",
    DateCreation: "Date creation",
    Description: "Description",
    DateStart: "Date start",
    DateFinish: "Date finish",
    DeadlineToStart: "Deadline to start",
    DeadlineToFinish: "Deadline to finish",
    Observers: "Observers",
    ObserverId: "Observer Id",
    Tags: "Tags",
    ProhibitedForExecution: "Prohibited for execution",
    AssignmentDeleted: "Assignment deleted",
    TypeSomething: "Type something"
  },
  ParameterFormLabel: {
    Title: "Parametreler",
    Name: "Isim",
    Type: "Tip",
    Purpose: "amaç",
    Value: "Değer",
    InitialValue: "Başlangıç ​​Değeri",
    ShowSystemParameters: "Sistem parametrelerini göster"
  },
  ActorFormLabel: {
    Title: "Aktörler",
    Name: "Isim",
    Rule: "Kural",
    Value: "Değer",
    ShowPredefinedActors: "Show predefined actors"
  },
  CommandFormLabel: {
    Title: "komuta",
    Name: "Isim",
    InputParameters: "Giriş parametreleri",
    InputParametersName: "Isim",
    InputParametersIsRequired: "gereklidir",
    InputParametersParameter: "Parametre",
    InputParametersDefaultValue: "Varsayılan"
  },
  CommandParametersFormLabel: {
    Title: "command parameters",
    InputParametersName: "Name",
    InputParametersIsRequired: "Required",
    InputParametersParameter: "Parameter",
    InputParametersDefaultValue: "Default"
  },
  ProcessInfoFormLabel: {
    Title: "Additional Parameters",
    IsObsolete: "IsObsolete",
    DefiningParameters: "Defining parameters",
    ProcessParameters: "Process parameters",
    SystemParametersTabName: "System Parameters",
    ProcessParametersTabName: "Process Parameters",
    HistoryTabName: "History",
    TimersTabName: "Timers",
    TagsTabName: "Tags",
    TagsInputPlaceholder: "Start entering a name to add a tag",
    HistoryTabFromLabel: "From",
    HistoryTabFromStateLabel: "From State",
    HistoryTabToLabel: "To",
    HistoryTabToStateLabel: "To State",
    HistoryTabExecutorIdLabel: "Executor Id",
    HistoryTabActorIdLabel: "Actor Id",
    HistoryTabExecutorLabel: "Executor",
    HistoryTabActorLabel: "Actor",
    HistoryTabTimeLabel: "Time",
    HistoryTabStartTimeLabel: "Start Time",
    HistoryTabDurationLabel: "Duration (ms)",
    HistoryTabTriggerNameLabel: "Trigger Name",
    HistoryTabTransitionClassifierNameLabel: "",
    ParametersNameLabel: "Name",
    ParametersValueLabel: "Value",
    TimersTabNameLabel: "Name",
    TimersTabValueLabel: "Value",
    RootProcess: "Root Process",
    TagsLabel: "Tags (separated by commas)",
    GeneralTabLabel: "General",
    ProcessIdLabel: "Process Id"
  },
  DropdownValues: {
    Name: "Name",
    Value: "Value",
    Dropdown: "Dropdown",
    Values: "values"
  },
  CodeActionsFormLabel: {
    Title: "Kod eylemleri",
    Name: "Isim",
    ActionCode: "Eylem kodu",
    CommonUsings: "Common Usings",
    IsGlobal: "Küresel mi",
    IsAsync: "zaman uyumsuz",
    Type: "Tip",
    GlobalDeleteMessage: "Global CodeAction'ı silerseniz - <br/> <b> diğer şemalar onu arayamaz! <\/b>",
    UnGlobalMessage: "Küresel bayrağın durumunu değiştirdiniz. <br/> Bu şemayı kaydettikten sonra bu Global CodeAction'a dayalı bir Yerel Kodlama Oluşturulacak.",
    EditParameters: "Edit parameters",
    Parameters: "Parameters",
    Text: "Text",
    TextArea: "TextArea",
    Number: "Number",
    Checkbox: "Checkbox",
    Dropdown: "Dropdown",
    MultiSelect: "MultiSelect",
    DateTime: "Date/Time",
    Date: "Date",
    Time: "Time",
    Values: "Values",
    DropdownName: "Name",
    DropdownValue: "Value",
    DropdownShouldContainValues: "Dropdown should contain values",
    IsRequired: "Required",
    DefaultValue: "Default value",
    Json: "Json",
    TitleField: "Title"
  },
  EditParametersFormlabel: {
    Title: "Edit parameter values",
    NumberRequired: "Should be a numeric value",
    DateShouldBeInISOFormat: "Date/Time parameter should be in ISO8601 format",
    SwitchToJson: "Switch to JSON editor",
    SwitchToConstructor: "Switch to parameter values editor",
    InvalidJson: "JSON object is invalid or does not match the model",
    CustomForms: {
      HTTPRequest: {
        Name: "Name",
        State: "State",
        UseAuth: "Use authentication",
        Heading: "Request",
        Url: "Url",
        Post: "Post",
        StoreResponse: "Store response",
        Username: "Username",
        Password: "Password",
        ParameterName: "Parameter name",
        ParameterPurpose: "Parameter purpose",
        ContentType: "Content type",
        AddProcessInstanceParameters: "Add process instance parameters",
        Parameters: "Parameters",
        Headers: "Headers"
      },
      SendEmail: {
        Name: "Name",
        State: "State",
        Heading: "Form",
        UseAuth: "Use authentication",
        MailServer: "Mail server",
        MailServerPort: "Mail server port",
        MailServerFrom: "Mail server from",
        To: "To",
        Subject: "Subject",
        MailServerSsl: "MailServerSsl",
        IsHTML: "IsHTML",
        MailServerLogin: "Mail server login",
        MailServerPass: "Mail server pass",
        Body: "Body"
      },
      StartLoopFor: {
        Name: "Name",
        State: "State",
        Heading: "Loop",
        DateRange: "Date range",
        RangeSeparator: "To",
        StartDate: "Start date",
        EndDate: "End date",
        Reverse: "Reverse",
        LoopName: "Loop name",
        LoopStateParameterName: "Loop state parameter name",
        LoopCounterValueParameterName: "Loop counter value parameter name",
        CounterType: "Counter type",
        StartValue: "Start value",
        EndValue: "End value",
        Step: "Step",
        StepType: "Step type",
        IncludeLastValue: "Include last value"
      },
      StartLoopForeach: {
        Name: "Name",
        State: "State",
        Heading: "Loop",
        ValuesError: "None value cannot be empty!",
        Values: "Values",
        LoopName: "Loop name",
        LoopStateParameterName: "Loop state parameter name",
        LoopCounterValueParameterName: "Loop counter value parameter name",
        Reverse: "Reverse"
      },
      CreateProcess: {
        Name: "Name",
        State: "State",
        Heading: "Main settings",
        ParameterName: "Name",
        ParameterPurpose: "Purpose",
        ParameterValue: "Value",
        Scheme: "Scheme",
        ProcessId: "Process id",
        ProcessCreationParameters: "Process creation parameters",
        ParameterInitialValue: "Initial value"
      },
      AssignmentCreate: {
        Name: "Name",
        State: "State",
        Heading: "Assignment",
        Code: "Code",
        NewTag: "New Tag",
        Executors: "Executors",
        IsActive: "Is active",
        Description: "Description",
        DeadlineToStart: "Deadline to start",
        DeadlineToComplete: "Deadline to complete",
        Observers: "Observers",
        Tags: "Tags"
      },
      AssignmentChange: {
        Name: "Name",
        State: "State",
        Heading: "Assignment",
        Code: "Code",
        ReplacementExecutors: "Replacement of executors",
        OldExecutor: "Old executor",
        NewExecutor: "New executor",
        AllExecutors: "All",
        Change: "Change",
        Status: "Status",
        DeadlineToStart: "Deadline to start",
        DeadlineToComplete: "Deadline to complete",
        Tags: "Tags",
        Observers: "Observers",
        NewTag: "New Tag",
        StatusState: "Status state",
        IsActive: "Is active"
      },
      AssignmentsHaveStatus: {
        Name: "Name",
        State: "State",
        Code: "Code",
        Condition: "Condition",
        IncludeInactive: "Include inactive",
        StatusState: "Status state",
        Assignments: "Assignments"
      },
      SetLoopState: {
        Name: "Name",
        State: "State",
        LoopName: "Loop name",
        LoopState: "Loop state"
      }
    },
    IncorrectForm: "Your form contains greater than one element, and at least one element doesn't have a Name. Please specify the Name for each element."
  },
  ToolbarLabel: {
    CreateActivity: "Etkinlik oluştur",
    CreateInline: "Create inline (template)",
    CopySelected: "Seçilenleri kopyala",
    Undo: "Geri alma",
    Redo: "yeniden yapmak",
    Move: "Hareket",
    ZoomIn: "Yakınlaştır",
    ZoomOut: "Uzaklaştırmak",
    FitToScreen: "Fit to screen",
    ZoomTo100: "Set zoom to 100%",
    FullScreen: "Tam ekran",
    Refresh: "Yenile",
    AutoArrangement: "Otomatik düzenleme",
    Actors: "Aktörler",
    Commands: "Komutları",
    Parameters: "Parametreler",
    Assignments: "Assignments",
    Localization: "Yerelleştirme",
    Timers: "Zamanlayıcılar",
    AdditionalParameters: "Ek Parametreler",
    CodeActions: "Kod eylemleri",
    Info: "Genişletilmiş bilgi",
    Delete: "Silmek",
    Clone: "Klon",
    Settings: "Ayarlar",
    CreateTransition: "Geçiş oluştur",
    CreateActivityTransition: "Bir etkinlik ve geçiş oluşturun",
    Legend: "Efsane",
    ProcessInfo: "Process Info",
    Inline: "The scheme can be inlined",
    Elements: "Elements",
    Library: "Library",
    ResetSettings: "Reset settings",
    ZoomPositionDefault: "Yakınlaştırma varsayılanı"
  },
  LibraryLabel: {PluginRequired: "Plugin required:"},
  Logs: {
    Label: "Logs",
    ParamName: "LogEnabled",
    Description: "This parameter is the default value for logging processes based on this scheme",
    AutoRefresh: "Auto refresh",
    Empty: "Empty",
    Timestamp: "Timestamp",
    Message: "Message",
    Exception: "Exception",
    Show: "Show",
    ExceptionInfo: "Exception info",
    HideDetails: "Hide details",
    ShowDetails: "Show details"
  },
  ErrorActivityIsInitialCountText: "Bir öğe bayrakla işaretlenmiş olmalıdır",
  ErrorActivityIsFinalCountText: "This scheme is Inlined. One or more elements must be marked flag Final",
  ErrorReadOnlySaveText: "ReadOnly modunda Tasarımcı, kaydedemezsiniz.",
  ErrorInvalidObjectsSaveText: "Can't save the schema. Those objects are in invalid state",
  BrokenReferencesDialogText: "This schema contains references to ELEMENTS that aren't defined by this schema or current action providers. Do you want to keep them?",
  EditCodeSettings: {
    Height: 600,
    Width: 1000,
    CodeHeight: 390,
    MessageBoxHeight: 400,
    MessageBoxWidth: 600,
    SuccessBoxHeight: 150,
    SuccessBoxWidth: 300
  },
  EditCodeLabel: {
    Title: "Kodu düzenle",
    EditCodeButton: "Kodu düzenle",
    Usings: "Usings",
    Compile: "Derlemek",
    CompileSucceeded: "Derleme başarılı oldu.",
    Success: "Başarı",
    Error: "Hata",
    OK: "Tamam",
    ShowUsings: "Gösterileri göster",
    HideUsings: "Kullanımları gizle"
  },
  EditJSONLabel: {
    Title: "JSON'daki Değeri düzenle",
    CreateEmptyType: "Yaratmak",
    Format: "Biçim"
  },
  EditExpressionSettings: {
    Height: 600,
    Width: 1000,
    CodeHeight: 390,
    MessageBoxHeight: 400,
    MessageBoxWidth: 600,
    SuccessBoxHeight: 150,
    SuccessBoxWidth: 300
  },
  EditExpressionLabel: {
    Title: "Edit expression",
    Validate: "Validate",
    Succeeded: "Expression is valid.",
    Success: "Success",
    Error: "Error",
    OK: "OK"
  },
  Elements: {
    Header: "Elements",
    BasicActivity: "Basic Activity",
    BasicActivityDesc: "It determines a state and the order, in which Actions are executed in your process.",
    InlineHeader: "Inline",
    InitialActivity: "Initial Activity",
    InitialActivityDesc: "It a initial state.",
    FinalActivity: "Final Activity",
    FinalActivityDesc: "It a final state.",
    SetLoopState: {
      Title: "Set loop state",
      Description: "The action for set loop state"
    }
  },
  OverviewMap: {show: true, width: 300, height: 150},
  UndoDepth: 200,
  DefaultCulture: "tr-TR",
  ErrorInBrowserConsole: "See more info in the browser console.",
  ELEMENT: {
    el: {
      colorpicker: {confirm: "Onayla", clear: "Temizle"},
      datepicker: {
        now: "Şimdi",
        today: "Bugün",
        cancel: "İptal",
        clear: "Temizle",
        confirm: "Onayla",
        selectDate: "Tarih seç",
        selectTime: "Saat seç",
        startDate: "Başlangıç Tarihi",
        startTime: "Başlangıç Saati",
        endDate: "Bitiş Tarihi",
        endTime: "Bitiş Saati",
        prevYear: "Önceki Yıl",
        nextYear: "Sonraki Yıl",
        prevMonth: "Önceki Ay",
        nextMonth: "Sonraki Ay",
        year: "",
        month1: "Ocak",
        month2: "Şubat",
        month3: "Mart",
        month4: "Nisan",
        month5: "Mayıs",
        month6: "Haziran",
        month7: "Temmuz",
        month8: "Ağustos",
        month9: "Eylül",
        month10: "Ekim",
        month11: "Kasım",
        month12: "Aralık",
        week: "week",
        weeks: {
          sun: "Paz",
          mon: "Pzt",
          tue: "Sal",
          wed: "Çar",
          thu: "Per",
          fri: "Cum",
          sat: "Cmt"
        },
        months: {
          jan: "Oca",
          feb: "Şub",
          mar: "Mar",
          apr: "Nis",
          may: "May",
          jun: "Haz",
          jul: "Tem",
          aug: "Ağu",
          sep: "Eyl",
          oct: "Eki",
          nov: "Kas",
          dec: "Ara"
        }
      },
      select: {
        loading: "Yükleniyor",
        noMatch: "Eşleşen veri bulunamadı",
        noData: "Veri yok",
        placeholder: "Seç"
      },
      cascader: {
        noMatch: "Eşleşen veri bulunamadı",
        loading: "Yükleniyor",
        placeholder: "Seç",
        noData: "Veri yok"
      },
      pagination: {
        goto: "Git",
        pagesize: "/sayfa",
        total: "Toplam {total}",
        pageClassifier: ""
      },
      messagebox: {
        title: "Mesaj",
        confirm: "Onayla",
        cancel: "İptal",
        error: "İllegal giriş"
      },
      upload: {
        deleteTip: "kaldırmak için delete tuşuna bas",
        delete: "Sil",
        preview: "Görüntüle",
        continue: "Devam"
      },
      table: {
        emptyText: "Veri yok",
        confirmFilter: "Onayla",
        resetFilter: "Sıfırla",
        clearFilter: "Hepsi",
        sumText: "Sum"
      },
      tree: {emptyText: "Veri yok"},
      transfer: {
        noMatch: "Eşleşen veri bulunamadı",
        noData: "Veri yok",
        titles: ["Liste 1", "Liste 2"],
        filterPlaceholder: "Anahtar kelimeleri gir",
        noCheckedFormat: "{total} adet",
        hasCheckedFormat: "{checked}/{total} seçildi"
      },
      image: {error: "FAILED"},
      pageHeader: {title: "Back"},
      popconfirm: {confirmButtonText: "Yes", cancelButtonText: "No"},
      empty: {description: "Veri yok"}
    }
  },
  EditJSONSettings: {Height: 600, Width: 1000, CodeHeight: 480}
};

window.WorkflowDesignerConstants = WorkflowDesignerConstants;