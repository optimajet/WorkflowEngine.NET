var WorkflowDesignerConstants = {
    ActivityColor: "#ECF0F1",
    ActivityTextColor: "#2D3436",
    ActivityInitialColor: "#27AE60",
    ActivityInitialTextColor: "#FFFFFF",
    ActivityFinalColor: "#2980B9",
    ActivityFinalTextColor: "#FFFFFF",
    ActivityShape: "#CECECE",
    SelectColor: "#F39C12",
    SelectTextColor: "#FFFFFF",
    SelectSubProcessColor: "#e3b015",
    SelectSubProcessTextColor: "#FFFFFF",
    ButtonActive: "#D4D8D9",
    BarColor: "#EDF1F2",
    BarSeparatorColor: "#D9DEE0",
    DeleteConfirm: "Sind Sie sicher, dass Sie gewählten Einträge löschen möchten?",
    DeleteConfirmCurrent: "Sind Sie sicher, dass Sie diesen Eintrag löschen möchten?",
    FieldIsRequired: "Feld ist erforderlich!",
    FieldMustBeUnique: "Feld muss eindeutig sein!",
    ButtonTextDelete: "Löschen",
    ButtonTextCreate: "Erstellen",
    ButtonTextSave: "Speichern",
    ButtonTextYes: "Ja",
    ButtonTextNo: "Nein",
    ButtonTextCancel: "Abbrechen",
    ButtonTextClose: "Schließen",
    ButtonTextUndo: "Rückgängig machen",
    ButtonTextRedo: "Wiederholen",
    SaveConfirm: "Änderungen speichern?",
    CloseWithoutSaving: "Änderungen verwerfen?",
    TransitionAuto: 'Auto',
    DialogConfirmText: "Frage",
    None: "Keiner",
    Warning: "Warnung",
    InfoBlockLabel: {
        Activity: "Aktivitäten:",
        Transition: "Übergänge:",
        Command: "Befehle:"
    },
    ActivityNamePrefix: "Aktivität_",
    ActivityFormLabel: {
        Title: "Aktivität",
        TitleForInline: 'Aktivität (eingebettet)',
        Name: "Name",
        State: "Zustand",
        IsInitial: "Initial",
        IsFinal: "Final",
        IsForSetState: "Für gesetzten Zustand",
        IsAutoSchemeUpdate: "Automatisches Schema-Update",
        Implementation: "Implementierung",
        PreExecutionImplementation: "Implementierung Vorabausführung",
        ImpOrder: "Reihenfolge",
        ImpAction: "Aktion",
        ImpActionParameter: "Parameter",
        AlwaysConditionShouldBeSingle: "Die Immer-Bedingung muss die einzige Bedingung sein",
        OtherwiseConditionShouldBeSingle: "Die Andernfalls-Bedingung muss die einzige Bedingung sein",
        Annotations: 'Anmerkungen',
        AnnotationName: 'Name',
        AnnotationValue: 'Wert',
        Scheme: "Schema einbetten"
    },
    TransitionFormLabel: {
        Title: "Übergang",
        Name: "Name",
        From: "Von der Aktivität",
        To: "Zur Aktivität",
        Classifier: "Klassifizierer",
        Restrictions: "Beschränkungen",
        RestrictionsType: "Art",
        RestrictionsActor: "Anwender",
        Condition: "Bedingung",
        ConditionType: "Art",
        ConditionAction: "Aktion",
        ResultOnPreExecution: "Ergebnis der Vorabausführung",
        Trigger: "Auslöser",
        TriggerType: "Art",
        TriggerCommand: "Befehl",
        TriggerTimer: "Timer",
        ConditionActionParameter: "Parameter",
        ConditionInversion: "Ergebnis umkehren",
        ConditionExpression: 'Expression',
        ConditionsConcatenationType: "Bedingungen Verkettungstyp",
        AllowConcatenationType: "Verkettung erlauben als",
        RestrictConcatenationType: "Verkettung einschränken als",
        ConditionsListShouldNotBeEmpty: "Die Liste der Bedingungen sollte nicht leer sein",
        IsFork: "Ist eine Verzweigung",
        MergeViaSetState: "Teilprozess über gesetzten Zustand zusammenführen",
        DisableParentStateControl: "Deaktivieren Sie die übergeordnete Prozesssteuerung",
        ShowConcatParameters: "Verkettung anzeigen",
        HideConcatParameters: "Verkettung ausblenden",
        Annotations: 'Anmerkungen',
        AnnotationName: 'Name',
        AnnotationValue: 'Wert',
        InlinedFinalActivityName: "Eingebettete Abschlussaktivität"
    },
    LocalizationFormLabel: {
        Title: "Lokalisierung",
        ObjectName: "Objektname",
        Type: "Art",
        IsDefault: "Standardwert",
        Culture: "Kultur",
        Value: "Wert",
        Types: [
            "Befehl",
            "Status",
            "Parameter"
        ]
    },
    TimerFormLabel: {
        Title: "Timer",
        Name: "Name",
        Type: "Art",
        Value: "Wert",
        Types: [
            "Befehl",
            "Status",
            "Parameter"
        ],
        NotOverrideIfExists: "Den Timer nicht überschreiben, falls er existiert"
    },
    ParameterFormLabel: {
        Title: "Parameter",
        Name: "Name",
        Type: "Art",
        Purpose: "Zweck",
        Value: "Wert",
        InitialValue: "Ursprünglicher Wert",
        ShowSystemParameters: "Zeige Systemparameter"
    },
    ActorFormLabel: {
        Title: "Anwender",
        Name: "Name",
        Rule: "Regel",
        Value: "Wert"
    },
    CommandFormLabel: {
        Title: "Befehl",
        Name: "Name",
        InputParameters: "Eingabeparameter",
        InputParametersName: "Name",
        InputParametersIsRequired: "Erforderlich",
        InputParametersParameter: "Parameter",
        InputParametersDefaultValue: "Standard"
    },
    ProcessInfoFormLabel: {
        Title: 'Zusätzliche Parameter',
        IsObsolete: "Veraltet",
        DefiningParameters: 'Parameter definieren',
        ProcessParameters: 'Parameter verarbeiten',
        SystemParametersTabName: 'Systemparameter',
        ProcessParametersTabName: 'Prozessparameter',
        HistoryTabName: 'Historie',
        TimersTabName: 'Timer',
        TagsTabName: "Tags",
        HistoryTabFromLabel: 'Von',
        HistoryTabFromStateLabel: 'Von Status',
        HistoryTabToLabel: 'Nach',
        HistoryTabToStateLabel: 'Nach Status',
        HistoryTabExecutorIdLabel: 'Ausgeführt von Id',
        HistoryTabActorIdLabel: 'Anwender Id',
        HistoryTabTimeLabel: 'Zeit',
        HistoryTabTriggerNameLabel: 'Timer Name',
        HistoryTabTransitionClassifierNameLabel: '',
        ParametersNameLabel: 'Name',
        ParametersValueLabel: 'Wert',
        TimersTabNameLabel: 'Name',
        TimersTabValueLabel: 'Wert',
        RootProcess: "Wurzelprozess",
        TagsLabel:'Tags (durch Komma getrennt)'
    },
    CodeActionsFormLabel: {
        Title: "Codeaktionen",
        Name: "Name",
        ActionCode: "Aktionscode",
        IsGlobal: "Ist global",
        IsAsync: "Asynchron",
        Type: "Art",
        GlobalDeleteMessage: "Sie haben die globale CodeAction gelöscht. <br/><b> Andere Schemata können diese CodeAction nicht aufrufen! </b>",
        UnGlobalMessage: "Sie haben den Status des globalen Flags geändert. <br/> Nach dem Speichern dieses Schemas wird auf der Grundlage dieser globalen CodeAction eine lokale CodeAction erstellt.",
        EditParameters: "Parameter editieren",
        Parameters: "Parameter",
        Text: "Text",
        TextArea: "TextArea",
        Number: "Zahl",
        Checkbox: "Auswahlbox",
        Dropdown: "Auswahlliste",
        MultiSelect: "MultiSelect",
        DateTime: "Datum/Uhrzeit",
        Values: 'Werte',
        DropdownName: 'Name',
        DropdownValue: 'Wert',
        DropdownShouldContainValues: 'Die Auswahlliste sollte Einträge enthalten',
        IsRequired: 'Benötigt',
        DefaultValue: 'Standardwert',
        Json: 'Json'
    },
    EditParametersFormlabel: {
        Title: "Parameterwerte editieren",
        NumberRequired: "Muss ein numerischer Wert sein",
        DateShouldBeInISOFormat: "Der Datums-/Zeitwert sollte dem ISO8601-Format entsprechen",
        SwitchToJson: "Zum JSON-Editor wechseln",
        SwitchToConstructor: "Zum Parameter-Editor wechseln",
        InvalidJson: "Das JSON-Object ist ungültig oder entspricht nicht dem Modell"
    },
    ToolbarLabel: {
        CreateActivity: "Aktivität erstellen",
        CreateInline: 'Eingebettete Aktivität erstellen (Vorlage)',
        CopySelected: "Ausgewählte kopieren",
        Undo: "Rückgängig machen",
        Redo: "Wiederholen",
        Move: "Bewegung",
        ZoomIn: "Hineinzoomen",
        ZoomOut: "Rauszoomen",
        ZoomPositionDefault: "Auf Standard zoomen",
        FullScreen: "Vollbildschirm",
        Refresh: "Aktualisierung",
        AutoArrangement: "Automatische Anordnung",
        Actors: "Anwender",
        Commands: "Befehle",
        Parameters: "Parameter",
        Localization: "Lokalisierung",
        Timers: "Auslöser",
        AdditionalParameters: "Zusätzliche Parameter",
        CodeActions: "Codeaktionen",
        Info: "Erweiterte Info",
        Delete: "Löschen",
        Clone: "Duplizieren",
        Settings: "die Einstellungen",
        CreateTransition: "Erstellen Sie einen Übergang",
        CreateActivityTransition: "Erstellen Sie eine Aktivität und einen Übergang",
        Legend: "Legende",
        ProcessInfo: "Prozessinformationen",
        Inline: "Das Schema kann eingebettet werden"
    },
    ErrorActivityIsInitialCountText: "Eine Aktivität muss als Initial gekennzeichnet sein",
    ErrorActivityIsFinalCountText: "Dieses Schema ist eingebettet. Eine oder mehrere Aktivitäten müssen als final gekennzeichnet sein.",
    ErrorReadOnlySaveText: "Im ReadOnly-Modus können Änderungen im Designer nicht gespeichert werden.",
    ErrorInvalidObjectsSaveText: function (objects) {
        return "Das Schema kann nicht gespeichert werden. Die folgenden Objekte sind in einem ungültigen Zustand: " + objects;
    },
    BrokenReferencesDialogText: "Dieses Schema enthält Referenzen zu Code-Aktionen, die nicht durch den aktuellen Code-Provider oder das aktuelle Schema bereitgestellt werden. Wollen Sie diese behalten?",
    EditCodeSettings: {
        Height: 600,
        Width: 1000,
        CodeHeight: 390,
        MessageBoxHeight: 400,
        MessageBoxWidth: 600,
        SuccessBoxHeight: 150,
        SuccessBoxWidth: 300
    },
    EditCodeLabel: {
        Title: "Code bearbeiten",
        EditCodeButton: "Code bearbeiten",
        Usings: "Verweise",
        Compile: "Kompilieren",
        CompileSucceeded: "Kompilierung erfolgreich.",
        Success: "Erfolg",
        Error: "Fehler",
        OK: "OK",
        ShowUsings: "Verweise anzeigen",
        HideUsings: "Verbergen"
    },
    EditJSONSettings: {
        Height: 600,
        Width: 1000,
        CodeHeight: 480
    },
    EditJSONLabel: {
        Title: "Bearbeiten Sie den Wert in JSON-Format",
        CreateEmptyType: "Erstellen",
        Format: "Format"
    },
    EditExpressionSettings:
        {
            Height: 600,
            Width: 1000,
            CodeHeight: 390,
            MessageBoxHeight: 400,
            MessageBoxWidth: 600,
            SuccessBoxHeight: 150,
            SuccessBoxWidth: 300
        },
    EditExpressionLabel: {
        Title: "Edit expression",
        Validate: "Validate",
        Succeeded: "Expression is valid.",
        Success: "Success",
        Error: "Error",
        OK: "OK"
    },
    OverviewMap: {
        show: true,
        width: 300,
        height: 150
    },
    UndoDepth: 200,
    DefaultCulture: "de-de",
    ErrorInBrowserConsole: "Weitere Informationen sehen Sie in der Browserconsole."
};
