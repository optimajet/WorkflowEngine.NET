var WorkflowDesignerConstants = {
    ActivityColor: "#ECF0F1",
    ActivityTextColor: "#2D3436",
    ActivityInitialColor: "#27AE60",
    ActivityInitialTextColor: "#FFFFFF",
    ActivityFinalColor: "#2980B9",
    ActivityFinalTextColor: "#FFFFFF",
    ActivityShape: "#CECECE",
    SelectColor: "#F39C12",
    SelectTextColor: "#FFFFFF",
    SelectSubProcessColor: "#e3b015",
    SelectSubProcessTextColor: "#FFFFFF",
    ButtonActive: "#D4D8D9",
    BarColor: "#EDF1F2",
    BarSeparatorColor: "#D9DEE0",
    DeleteConfirm: "Вы действительно хотите удалить выбранные элементы?",
    DeleteConfirmCurrent: "Вы уверены, что хотите удалить этот элемент?",
    FieldIsRequired: "Поле обязательное для заполнения!",
    FieldMustBeUnique: "Поле должно быть уникальным!",
    ButtonTextDelete: "Удалить",
    ButtonTextCreate: "Создать",
    ButtonTextSave: "Сохранить",
    ButtonTextYes: "Да",
    ButtonTextNo: "Нет",
    ButtonTextCancel: "Отменить",
    ButtonTextClose: "Закрыть",
    ButtonTextUndo: "Отменить",
    ButtonTextRedo: "Повторить",
    SaveConfirm: "Сохранить изменения?",
    CloseWithoutSaving: "Закрыть без сохранения?",
    TransitionAuto: 'Auto',
    DialogConfirmText: "Вопрос",
    None: "Никто",
    Warning: "Предупреждение",
    InfoBlockLabel: {
        Activity: "Состояния:",
        Transition: "Переходы:",
        Command: "Команды:"
    },
    ActivityNamePrefix: "Деятельность_",
    ActivityFormLabel: {
        Title: "Деятельность",
        TitleForInline: 'Activity Inline',
        Name: "Наименование",
        State: "Статус",
        IsInitial: "Начальный",
        IsFinal: "Конечный",
        IsForSetState: "Произвольная установка",
        IsAutoSchemeUpdate: "Автоматическое обновление схемы",
        Implementation: "Реализация",
        PreExecutionImplementation: "Реализация PreExcecute",
        ImpOrder: "Порядок",
        ImpAction: "Действие",
        ImpActionParameter: "Параметр действия",
        AlwaysConditionShouldBeSingle: "Условие 'всегда' должно быть одно",
        OtherwiseConditionShouldBeSingle: "Условие 'в противном случае' должно быть одно",
        Annotations: 'Annotations',
        AnnotationName: 'Name',
        AnnotationValue: 'Value',
        Scheme: "Inline scheme"
    },
    TransitionFormLabel: {
        Title: "Переход",
        Name: "Наименование",
        From: "От деятельности",
        To: "К деятельности",
        Classifier: "Классификатор",
        Restrictions: "Ограничения",
        RestrictionsType: "Тип",
        RestrictionsActor: "Актер",
        Condition: "Состояние",
        ConditionType: "Тип",
        ConditionAction: "Действие",
        ResultOnPreExecution: "Результат выполнения операции",
        Trigger: "Триггер",
        TriggerType: "Тип",
        TriggerCommand: "Команда",
        TriggerTimer: "Таймер",
        ConditionActionParameter: "Параметр действия",
        ConditionInversion: "Инвертировать результат",
        ConditionExpression: 'Expression',
        ConditionsConcatenationType: "Тип конкатенации условий",
        AllowConcatenationType: "Конкатенацию разрешить как",
        RestrictConcatenationType: "Конкатинация",
        ConditionsListShouldNotBeEmpty: "Список условий не должен быть пустым",
        IsFork: "Является стартом дочернего процесса",
        MergeViaSetState: "Объединить подпроцесс через заданное состояние",
        DisableParentStateControl: "Отключить родительский контроль процесса",
        ShowConcatParameters: "Показать конкатенацию",
        HideConcatParameters: "Скрыть конкатенацию",
        Annotations: 'Annotations',
        AnnotationName: 'Name',
        AnnotationValue: 'Value',
        InlinedFinalActivityName: "Inlined Final Activity Name"
    },
    LocalizationFormLabel: {
        Title: "Локализация",
        ObjectName: "ObjectName",
        Type: "Тип",
        IsDefault: "IsDefault",
        Culture: "Культура",
        Value: "Значение",
        Types: [
            "Command",
            "State",
            "Parameter"
        ]
    },
    TimerFormLabel: {
        Title: "Таймеры",
        Name: "название",
        Type: "Тип",
        Value: "Значение",
        Types: [
            "Command",
            "State",
            "Parameter"
        ],
        NotOverrideIfExists: "Не переопределять таймер, если он существует"
    },
    ParameterFormLabel: {
        Title: "Параметры",
        Name: "Наименование",
        Type: "Тип",
        Purpose: "Цель",
        Value: "Значение",
        InitialValue: "Начальное значение",
        ShowSystemParameters: "Показать параметры системы"
    },
    ActorFormLabel: {
        Title: "Актеры",
        Name: "Наименование",
        Rule: "Правило",
        Value: "Значение"
    },
    CommandFormLabel: {
        Title: "Команда",
        Name: "Наименование",
        InputParameters: "Входные параметры",
        InputParametersName: "Название",
        InputParametersIsRequired: "Обязательный",
        InputParametersParameter: "Параметр",
        InputParametersDefaultValue: "По умолчанию"
    },
    ProcessInfoFormLabel: {
        Title: 'Additional Parameters',
        IsObsolete: "IsObsolete",
        DefiningParameters: 'Defining parameters',
        ProcessParameters: 'Process parameters',
        SystemParametersTabName: 'System Parameters',
        ProcessParametersTabName: 'Process Parameters',
        HistoryTabName: 'History',
        TimersTabName: 'Timers',
        TagsTabName: "Tags",
        HistoryTabFromLabel: 'From',
        HistoryTabFromStateLabel: 'From State',
        HistoryTabToLabel: 'To',
        HistoryTabToStateLabel: 'To State',
        HistoryTabExecutorIdLabel: 'Executor Id',
        HistoryTabActorIdLabel: 'Actor Id',
        HistoryTabTimeLabel: 'Time',
        HistoryTabTriggerNameLabel: 'Trigger Name',
        HistoryTabTransitionClassifierNameLabel: '',
        ParametersNameLabel: 'Name',
        ParametersValueLabel: 'Value',
        TimersTabNameLabel: 'Name',
        TimersTabValueLabel: 'Value',
        RootProcess: "Root Process",
        TagsLabel:'Tags (separated by commas)'
    },
    CodeActionsFormLabel: {
        Title: "Действия",
        Name: "Наимедование",
        ActionCode: "Код действия",
        IsGlobal: "Является глобальным",
        IsAsync: "Асинхронный",
        Type: "Тип",
        GlobalDeleteMessage: "Вы удалили глобальное действие. <br/> <b> Другие схемы не смогут вызвать это Действие! </b>",
        UnGlobalMessage: "Вы изменили состояние глобального флага. <br/> После сохранения этой схемы будет создано локальное действие, основанный на этом глобальном действии.",
        EditParameters: "Edit parameters",
        Parameters: "Parameters",
        Text: "Text",
        TextArea: "TextArea",
        Number: "Number",
        Checkbox: "Checkbox",
        Dropdown: "Dropdown",
        MultiSelect: "MultiSelect",
        DateTime: "Date/Time",
        Values: 'Values',
        DropdownName: 'Name',
        DropdownValue: 'Value',
        DropdownShouldContainValues: 'Dropdown should contain values',
        IsRequired: 'Required',
        DefaultValue: 'Default value',
        Json: 'Json'
    },
    EditParametersFormlabel: {
        Title: "Edit parameter values",
        NumberRequired: "Should be a numeric value",
        DateShouldBeInISOFormat: "Date/Time parameter should be in ISO8601 format",
        SwitchToJson: "Switch to JSON editor",
        SwitchToConstructor: "Switch to parameter values editor",
        InvalidJson: "JSON object is invalid or does not match the model"
    },
    ToolbarLabel: {
        CreateActivity: "Создать активности",
        CreateInline: 'Create inline (template)',
        CopySelected: "Копировать выбранные",
        Undo: "Отменить",
        Redo: "Повторить",
        Move: "Двигать",
        ZoomIn: "Приблизить",
        ZoomOut: "Уменьшить",
        ZoomPositionDefault: "Установить масштаб по умолчанию",
        FullScreen: "Полноэкранный",
        Refresh: "Обновить",
        AutoArrangement: "Автоматическое расположение",
        Actors: "Актеры",
        Commands: "Команды",
        Parameters: "Параметры",
        Localization: "Локализация",
        Timers: "Таймеры",
        AdditionalParameters: "Дополнительные параметры",
        CodeActions: "Действия",
        Info: "Дополнительная информация",
        Delete: "Удалить",
        Clone: "Копировать",
        Settings: "Настройки",
        CreateTransition: "Создать переход",
        CreateActivityTransition: "Создать активности и переход",
        Legend: "Легенда",
        ProcessInfo: "Process Info",
        Inline: "The scheme can be inlined"
    },
    ErrorActivityIsInitialCountText: "Один элемент должен быть отмечен флагом Начальный",
    ErrorActivityIsFinalCountText: "This scheme is Inlined. One or more elements must be marked flag Final",
    ErrorReadOnlySaveText: "Конструктор в режиме ReadOnly, вы не можете его сохранить.",
    ErrorInvalidObjectsSaveText: function (objects) {
        return "Can't save the schema. Those objects are in invalid state: " + objects;
    },
    BrokenReferencesDialogText: "This schema contains references to Actions, Conditions or Rules that aren't defined by this schema or current action providers. Do you want to keep them?",
    EditCodeSettings: {
        Height: 600,
        Width: 1000,
        CodeHeight: 390,
        MessageBoxHeight: 400,
        MessageBoxWidth: 600,
        SuccessBoxHeight: 150,
        SuccessBoxWidth: 300
    },
    EditCodeLabel: {
        Title: "Изменить код",
        EditCodeButton: "Изменить код",
        Usings: "Usings",
        Compile: "Компилировать",
        CompileSucceeded: "Компиляция прошла успешно.",
        Success: "Успех",
        Error: "Ошибка",
        OK: "OK",
        ShowUsings: "Показать события",
        HideUsings: "Скрыть записи"
    },
    EditJSONSettings: {
        Height: 600,
        Width: 1000,
        CodeHeight: 480
    },
    EditJSONLabel: {
        Title: "Изменить значение в JSON",
        CreateEmptyType: "Создать",
        Format: "Формат"
    },
    EditExpressionSettings:
        {
            Height: 600,
            Width: 1000,
            CodeHeight: 390,
            MessageBoxHeight: 400,
            MessageBoxWidth: 600,
            SuccessBoxHeight: 150,
            SuccessBoxWidth: 300
        },
    EditExpressionLabel: {
        Title: "Edit expression",
        Validate: "Validate",
        Succeeded: "Expression is valid.",
        Success: "Success",
        Error: "Error",
        OK: "OK"
    },
    OverviewMap: {
        show: true,
        width: 300,
        height: 150
    },
    UndoDepth: 200,
    DefaultCulture: "ru-RU",
    ErrorInBrowserConsole: "See more info in the browser console."
};
